<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use BotMan\BotMan\BotMan;
use BotMan\BotMan\BotManFactory;
use BotMan\BotMan\Drivers\DriverManager;
// para en vio de enlaces y botones
use BotMan\BotMan\Messages\Outgoing\Actions\Button;
use BotMan\BotMan\Messages\Outgoing\Question;

class BotManController extends Controller
{
    public function handle(Request $request)
    {
        DriverManager::loadDriver(\BotMan\Drivers\Web\WebDriver::class);

        $config = [];
        $botman = BotManFactory::create($config);

        //preguntas y respuestas del bot
        $botman->hears('(hola|buenas|hey)', function ($bot) {
            $bot->reply('¬°Hola! üëã Soy tu asistente virtual de la Biblioteca. ¬øEn qu√© te puedo ayudar?');
        });

        $botman->hears('(horarios|horario|horarios de atenci√≥n)', function ($bot) {
            $bot->reply('Nuestro horario es de Lunes a Viernes, de 8:00 a 17:00 horas.');
        });

        $botman->hears('(ubicaci√≥n|d√≥nde est√°n|direcci√≥n)', function ($bot) {
            $bot->reply('Nos encontramos en El Tejar, Chimaltenango, Guatemala.');
        });

        $botman->hears('(servicios|qu√© hacen|qu√© ofrecen)', function ($bot) {
            $bot->reply("Ofrecemos: pr√©stamo de libros üìö, recomendaciones literarias üìñ y talleres educativos üè´.");
        });

        $botman->hears('adios', function (BotMan $bot) {
            $bot->reply('¬°Hasta pronto! üìö');
        });

        // contacto por whatsapp
        $botman->hears('(contacto|whatsapp|hablar con alguien)', function ($bot) {
            $numero = '50250770085'; // n√∫mero con c√≥digo de pa√≠s
            $mensaje = urlencode("Hola, quiero m√°s informaci√≥n sobre la Biblioteca.");
            $link = "https://wa.me/$numero?text=$mensaje";

            $bot->reply("Pod√©s contactarnos directamente por WhatsApp: <a href='$link' target='_blank'>Abrir WhatsApp</a>");
        });

        // üîç Buscar libro por nombre
        $botman->hears('tienen el libro (.*)', function (BotMan $bot, $bookName) {
            $book = \App\Models\Book::where('title', 'LIKE', "%{$bookName}%")
                ->whereNull('disabled_at')
                ->first();

            if ($book) {
                $mensaje = "‚úÖ S√≠, tenemos el libro *{$book->title}* disponible.\n";
                $mensaje .= "üë§ Autor: {$book->author}\n";
                if ($book->publisher) $mensaje .= "üè¢ Editorial: {$book->publisher}\n";
                if ($book->ubication) $mensaje .= "üìç Ubicaci√≥n: {$book->ubication}\n";

                $bot->reply($mensaje);
            } else {
                $bot->reply("üòî No encontr√© un libro con ese nombre o el libro no est√° disponible actualmente.");
            }
        });

        // üßë‚Äçüíº Buscar libros por autor
        $botman->hears('(libros del autor|tienen libros de|autor) (.*)', function (BotMan $bot, $match, $author) {
            $books = \App\Models\Book::where('author', 'LIKE', "%{$author}%")
                ->whereNull('disabled_at')
                ->take(5)
                ->get();

            if ($books->isEmpty()) {
                $bot->reply("üòî No encontr√© libros del autor *{$author}*.");
            } else {
                $bot->reply("üìö Estos son algunos libros del autor *{$author}*:");
                foreach ($books as $book) {
                    $bot->reply("‚Ä¢ *{$book->title}* (" . ($book->publisher ? $book->publisher : 'Editorial desconocida') . ")");
                }
            }
         });


// üî¢ Buscar libros por clasificaci√≥n Dewey
$botman->hears('(libros en la clasificaci√≥n|clasificaci√≥n dewey|dewey) (.*)', function (BotMan $bot, $match, $dewey) {
    $books = \App\Models\Book::where('dewey', 'LIKE', "{$dewey}%")
        ->whereNull('disabled_at')
        ->take(5)
        ->get();

    if ($books->isEmpty()) {
        $bot->reply("üòî No encontr√© libros en la clasificaci√≥n Dewey *{$dewey}*.");
    } else {
        $bot->reply("üìò Libros en la clasificaci√≥n Dewey *{$dewey}*:");
        foreach ($books as $book) {
            $bot->reply("‚Ä¢ *{$book->title}* ‚Äì Autor: {$book->author}");
        }
    }
});

         //pregunta por eventos
        $botman->hears('(qu√© eventos|eventos disponibles|pr√≥ximos eventos|eventos)', function (BotMan $bot) {
            $events = \App\Models\Event::whereDate('start', '>=', now())
                ->orderBy('start', 'asc')
                ->take(5)
                ->get();

            if ($events->isEmpty()) {
                $bot->reply("Por ahora no hay eventos programados üòÖ.");
            } else {
                $bot->reply("üìÖ Estos son los pr√≥ximos eventos:");
                foreach ($events as $event) {
                    $fecha = \Carbon\Carbon::parse($event->start)->format('d/m/Y');
                    $descripcion = $event->description ?? 'Sin descripci√≥n';
                    $bot->reply("‚Ä¢ *{$event->title}*\nüóì Fecha: {$fecha}\nüìù {$descripcion}");
                }
            }
        });

        /// mensaje por defecto si no entiende
        $botman->fallback(function ($bot) {
            $bot->reply("Lo siento, no entend√≠ eso üòÖ. Pod√©s escribir: 'horario', 'ubicaci√≥n', 'servicios' o 'whatsapp' para contactarnos.");
        });

        $botman->listen();
    }
}
